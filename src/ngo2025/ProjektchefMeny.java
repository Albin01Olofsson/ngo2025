package ngo2025;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.HashMap;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author albin
 */
public class ProjektchefMeny extends javax.swing.JFrame {

    private InfDB idb;
     private String inloggadAnvändare;
     

    public ProjektchefMeny(InfDB idb,String inloggadAnvändare) {
        this.idb=idb;
        this.inloggadAnvändare=inloggadAnvändare;
        
        initComponents();
       
       jPanelstart.setVisible(true);
       jPanelprojekt.setVisible(false);
       jPanelpartners.setVisible(false);
       jPanelhandläggare.setVisible(false);
       jPanelstatistik.setVisible(false);
        jLabelAnvändare.setText(inloggadAnvändare);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonProjekt = new javax.swing.JButton();
        jButtonPartners = new javax.swing.JButton();
        jButtonHandläggare = new javax.swing.JButton();
        jButtonStatistik = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanelstart = new javax.swing.JPanel();
        jPanelprojekt = new javax.swing.JPanel();
        jComboBoxProjekt = new javax.swing.JComboBox<>();
        jTextFieldPid = new javax.swing.JTextField();
        jTextFieldProjektNamn = new javax.swing.JTextField();
        jTextFieldBeskrivning = new javax.swing.JTextField();
        jTextFieldstartdatum = new javax.swing.JTextField();
        jTextFieldslutdatum = new javax.swing.JTextField();
        jTextFieldkostnad = new javax.swing.JTextField();
        jTextFieldstatus = new javax.swing.JTextField();
        jTextFieldprioritet = new javax.swing.JTextField();
        jTextFieldLand = new javax.swing.JTextField();
        jButtonSparaProjekt = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanelstatistik = new javax.swing.JPanel();
        jPanelpartners = new javax.swing.JPanel();
        jComboBoxVäljProjekt = new javax.swing.JComboBox<>();
        jButtonläggtillPartner = new javax.swing.JButton();
        jButtontabortpartner = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListPartners = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxVäljPartner = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jPanelhandläggare = new javax.swing.JPanel();
        jComboBoxVäljProjektHand = new javax.swing.JComboBox<>();
        jComboBoxVäljHandläggare = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListHandläggare = new javax.swing.JList<>();
        jButtontaborthandläggare = new javax.swing.JButton();
        jButtonläggtillhandläggare = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelAnvändare = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonProjekt.setText("Projekt");
        jButtonProjekt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProjektActionPerformed(evt);
            }
        });

        jButtonPartners.setText("Partners");
        jButtonPartners.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPartnersActionPerformed(evt);
            }
        });

        jButtonHandläggare.setText("Handläggare");
        jButtonHandläggare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHandläggareActionPerformed(evt);
            }
        });

        jButtonStatistik.setText("Statistik");
        jButtonStatistik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStatistikActionPerformed(evt);
            }
        });

        jLabel1.setText("Projektchef Meny");

        jComboBoxProjekt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxProjekt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxProjektActionPerformed(evt);
            }
        });

        jTextFieldPid.setText("jTextField1");

        jTextFieldProjektNamn.setText("jTextField2");

        jTextFieldBeskrivning.setText("jTextField3");

        jTextFieldstartdatum.setText("jTextField4");

        jTextFieldslutdatum.setText("jTextField5");

        jTextFieldkostnad.setText("jTextField6");

        jTextFieldstatus.setText("jTextField7");

        jTextFieldprioritet.setText("jTextField8");

        jTextFieldLand.setText("jTextField9");

        jButtonSparaProjekt.setText("Spara");
        jButtonSparaProjekt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSparaProjektActionPerformed(evt);
            }
        });

        jLabel2.setText("Ändra Uppgifter");

        jLabel3.setText("Välj Projekt");

        javax.swing.GroupLayout jPanelprojektLayout = new javax.swing.GroupLayout(jPanelprojekt);
        jPanelprojekt.setLayout(jPanelprojektLayout);
        jPanelprojektLayout.setHorizontalGroup(
            jPanelprojektLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelprojektLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanelprojektLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelprojektLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addGroup(jPanelprojektLayout.createSequentialGroup()
                        .addGroup(jPanelprojektLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxProjekt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSparaProjekt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addGroup(jPanelprojektLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldLand, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldprioritet, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldkostnad, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldslutdatum, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldstartdatum, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldBeskrivning, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldProjektNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldPid, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(86, 86, 86))
        );
        jPanelprojektLayout.setVerticalGroup(
            jPanelprojektLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelprojektLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanelprojektLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanelprojektLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxProjekt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jTextFieldProjektNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldBeskrivning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldstartdatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldslutdatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldkostnad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldprioritet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelprojektLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSparaProjekt)
                    .addComponent(jTextFieldLand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanelstatistikLayout = new javax.swing.GroupLayout(jPanelstatistik);
        jPanelstatistik.setLayout(jPanelstatistikLayout);
        jPanelstatistikLayout.setHorizontalGroup(
            jPanelstatistikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 390, Short.MAX_VALUE)
        );
        jPanelstatistikLayout.setVerticalGroup(
            jPanelstatistikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 333, Short.MAX_VALUE)
        );

        jComboBoxVäljProjekt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxVäljProjekt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxVäljProjektActionPerformed(evt);
            }
        });

        jButtonläggtillPartner.setText("Lägg till");
        jButtonläggtillPartner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonläggtillPartnerActionPerformed(evt);
            }
        });

        jButtontabortpartner.setText("Ta bort");
        jButtontabortpartner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtontabortpartnerActionPerformed(evt);
            }
        });

        jListPartners.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListPartners);

        jLabel4.setText("Välj projekt");

        jLabel5.setText("Partners på dina projekt");

        jComboBoxVäljPartner.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxVäljPartner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxVäljPartnerActionPerformed(evt);
            }
        });

        jLabel6.setText("Välj partner att lägga till");

        javax.swing.GroupLayout jPanelpartnersLayout = new javax.swing.GroupLayout(jPanelpartners);
        jPanelpartners.setLayout(jPanelpartnersLayout);
        jPanelpartnersLayout.setHorizontalGroup(
            jPanelpartnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelpartnersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtontabortpartner)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonläggtillPartner)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelpartnersLayout.createSequentialGroup()
                .addGroup(jPanelpartnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelpartnersLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBoxVäljProjekt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelpartnersLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(jComboBoxVäljPartner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(jPanelpartnersLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );
        jPanelpartnersLayout.setVerticalGroup(
            jPanelpartnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelpartnersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelpartnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelpartnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxVäljProjekt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxVäljPartner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanelpartnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonläggtillPartner)
                    .addComponent(jButtontabortpartner))
                .addContainerGap())
        );

        jComboBoxVäljProjektHand.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxVäljProjektHand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxVäljProjektHandActionPerformed(evt);
            }
        });

        jComboBoxVäljHandläggare.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jListHandläggare.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jListHandläggare);

        jButtontaborthandläggare.setText("Ta bort handläggare");
        jButtontaborthandläggare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtontaborthandläggareActionPerformed(evt);
            }
        });

        jButtonläggtillhandläggare.setText("Lägg till handläggare");
        jButtonläggtillhandläggare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonläggtillhandläggareActionPerformed(evt);
            }
        });

        jLabel7.setText("Välj projekt");

        jLabel8.setText("Välj handläggare");

        javax.swing.GroupLayout jPanelhandläggareLayout = new javax.swing.GroupLayout(jPanelhandläggare);
        jPanelhandläggare.setLayout(jPanelhandläggareLayout);
        jPanelhandläggareLayout.setHorizontalGroup(
            jPanelhandläggareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelhandläggareLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
            .addGroup(jPanelhandläggareLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtontaborthandläggare)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonläggtillhandläggare)
                .addContainerGap())
            .addGroup(jPanelhandläggareLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanelhandläggareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelhandläggareLayout.createSequentialGroup()
                        .addComponent(jComboBoxVäljProjektHand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                        .addComponent(jComboBoxVäljHandläggare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelhandläggareLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)))
                .addGap(26, 26, 26))
        );
        jPanelhandläggareLayout.setVerticalGroup(
            jPanelhandläggareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelhandläggareLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanelhandläggareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelhandläggareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxVäljProjektHand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxVäljHandläggare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(jPanelhandläggareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtontaborthandläggare)
                    .addComponent(jButtonläggtillhandläggare))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelstartLayout = new javax.swing.GroupLayout(jPanelstart);
        jPanelstart.setLayout(jPanelstartLayout);
        jPanelstartLayout.setHorizontalGroup(
            jPanelstartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelstartLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jPanelprojekt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanelstartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelstartLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelstatistik, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanelstartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelstartLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelpartners, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanelstartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelstartLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelhandläggare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanelstartLayout.setVerticalGroup(
            jPanelstartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelstartLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelprojekt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanelstartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelstartLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(jPanelstatistik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(12, Short.MAX_VALUE)))
            .addGroup(jPanelstartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelstartLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(jPanelpartners, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(12, Short.MAX_VALUE)))
            .addGroup(jPanelstartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelstartLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(jPanelhandläggare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(12, Short.MAX_VALUE)))
        );

        jLabelAnvändare.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonStatistik)
                            .addComponent(jButtonHandläggare)
                            .addComponent(jButtonPartners)
                            .addComponent(jButtonProjekt)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelAnvändare)))
                .addGap(30, 30, 30)
                .addComponent(jPanelstart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelAnvändare)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonProjekt)
                .addGap(18, 18, 18)
                .addComponent(jButtonPartners)
                .addGap(18, 18, 18)
                .addComponent(jButtonHandläggare)
                .addGap(18, 18, 18)
                .addComponent(jButtonStatistik)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelstart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//projektknappen 
    private void fyllProjektComboBox() {
    try {
        jComboBoxProjekt.removeAllItems();

        // Hämta användarens aid
        String sqlAid = "SELECT aid FROM anstalld WHERE epost = '" + inloggadAnvändare + "'";
        String aid = idb.fetchSingle(sqlAid);

        // Hämta projektnamn för projekt där användaren är projektchef
        String sqlProjekt = "SELECT projektnamn FROM projekt WHERE projektchef = '" + aid + "'";
        ArrayList<HashMap<String, String>> projektLista = idb.fetchRows(sqlProjekt);

        for (HashMap<String, String> projekt : projektLista) {
            String namn = projekt.get("projektnamn");
            jComboBoxProjekt.addItem(namn);  // Lägg bara till projektnamn
        }

    } catch (InfException ex) {
        JOptionPane.showMessageDialog(this, "Kunde inte hämta projekt: " + ex.getMessage());
    }
}
//partne knappen
private void fyllVäljProjektComboBox() {
    try {
        jComboBoxVäljProjekt.removeAllItems();

        String aid = idb.fetchSingle("SELECT aid FROM anstalld WHERE epost = '" + inloggadAnvändare + "'");
        String sql = "SELECT projektnamn FROM projekt WHERE projektchef = '" + aid + "'";
        ArrayList<HashMap<String, String>> projektLista = idb.fetchRows(sql);

        for (HashMap<String, String> projekt : projektLista) {
            jComboBoxVäljProjekt.addItem(projekt.get("projektnamn"));
        }

    } catch (InfException ex) {
        JOptionPane.showMessageDialog(this, "Kunde inte hämta projekt: " + ex.getMessage());
    }
}
//jComboBoxVäljProjektActionPerformed
private void fyllPartnerLista(String projektnamn) {
    try {
        DefaultListModel<String> modell = new DefaultListModel<>();

        String aid = idb.fetchSingle("SELECT aid FROM anstalld WHERE epost = '" + inloggadAnvändare + "'");
        String pid = idb.fetchSingle("SELECT pid FROM projekt WHERE projektnamn = '" + projektnamn + "' AND projektchef = '" + aid + "'");

        String sql =  "SELECT partner.pid, partner.namn FROM partner " +
             "JOIN projekt_partner ON partner.pid = projekt_partner.partner_pid " +
             "WHERE projekt_partner.pid = '" + pid + "'";

        ArrayList<HashMap<String, String>> partnerLista = idb.fetchRows(sql);

        for (HashMap<String, String> partner : partnerLista) {
            modell.addElement(partner.get("pid") + " - " + partner.get("namn"));
        }

        jListPartners.setModel(modell);

    } catch (InfException ex) {
        JOptionPane.showMessageDialog(this, "Kunde inte hämta partners: " + ex.getMessage());
    }
}
  //partnerknappen
    private void fyllVäljPartnerComboBox() {
    try {
        jComboBoxVäljPartner.removeAllItems();

        String sql = "SELECT pid, namn FROM partner";
        ArrayList<HashMap<String, String>> partnerLista = idb.fetchRows(sql);

        for (HashMap<String, String> partner : partnerLista) {
            String visning = partner.get("pid") + " - " + partner.get("namn");
            jComboBoxVäljPartner.addItem(visning);
        }

    } catch (InfException ex) {
        JOptionPane.showMessageDialog(this, "Kunde inte hämta partnerdata: " + ex.getMessage());
    }
}   //handläggarknappen
   private void fyllComboBoxVäljProjektHand() {
    try {
         jComboBoxVäljProjektHand.removeAllItems();

        String sql = "SELECT projektnamn FROM projekt " +
                     "WHERE projektchef = (SELECT aid FROM anstalld WHERE epost = '" + inloggadAnvändare + "')";
        ArrayList<HashMap<String, String>> projektLista = idb.fetchRows(sql);

        for (HashMap<String, String> projekt : projektLista) {
            String projektnamn = projekt.get("projektnamn");
             jComboBoxVäljProjektHand.addItem(projektnamn);
        }
    } catch (InfException ex) {
        JOptionPane.showMessageDialog(this, "Kunde inte hämta projekt: " + ex.getMessage());
    }
}
   //jComboBoxVäljProjektHand
   private void fyllListaMedHandlaggare(String Projektnamn) {
    try {
        DefaultListModel<String> modell = new DefaultListModel<>();

        String projektId = idb.fetchSingle(
                "SELECT pid FROM projekt " +
                "WHERE projektnamn = '" + Projektnamn + "' " +
                "AND projektchef = (SELECT aid FROM anstalld WHERE epost = '" + inloggadAnvändare + "')"
        );

        String sql = "SELECT anstalld.aid AS aid, anstalld.fornamn AS fornamn, anstalld.efternamn AS efternamn " +
                     "FROM anstalld " +
                     "JOIN ans_proj ON anstalld.aid = ans_proj.aid " +
                     "JOIN handlaggare ON anstalld.aid = handlaggare.aid " +
                     "WHERE ans_proj.pid = '" + projektId + "'";

        ArrayList<HashMap<String, String>> resultat = idb.fetchRows(sql);

        for (HashMap<String, String> rad : resultat) {
            String visning = rad.get("aid") + " - " + rad.get("fornamn") + " " + rad.get("efternamn");
            modell.addElement(visning);
        }

        jListHandläggare.setModel(modell);

    } catch (InfException e) {
        JOptionPane.showMessageDialog(this, "Kunde inte hämta handläggare: " + e.getMessage());
    }
}
   //handläggarknappen
   private void fyllComboBoxVäljHandlaggare() {
    try {
        jComboBoxVäljHandläggare.removeAllItems();

        String sql = "SELECT anstalld.aid AS aid, anstalld.fornamn AS fornamn, anstalld.efternamn AS efternamn " +
                     "FROM anstalld " +
                     "JOIN handlaggare ON anstalld.aid = handlaggare.aid";

        ArrayList<HashMap<String, String>> handlaggareLista = idb.fetchRows(sql);

        for (HashMap<String, String> rad : handlaggareLista) {
            String visning = rad.get("aid") + " - " + rad.get("fornamn") + " " + rad.get("efternamn");
            jComboBoxVäljHandläggare.addItem(visning);
        }

    } catch (InfException ex) {
        JOptionPane.showMessageDialog(this, "Kunde inte hämta handläggare: " + ex.getMessage());
    }
}
    
    private void jButtonProjektActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProjektActionPerformed
       jPanelstart.setVisible(true);
       jPanelprojekt.setVisible(true);
       jPanelpartners.setVisible(false);
       jPanelhandläggare.setVisible(false);
       jPanelstatistik.setVisible(false);
       fyllProjektComboBox();
       
       
    }//GEN-LAST:event_jButtonProjektActionPerformed

    private void jButtonPartnersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPartnersActionPerformed
       jPanelstart.setVisible(true);
       jPanelprojekt.setVisible(false);
       jPanelpartners.setVisible(true);
       jPanelhandläggare.setVisible(false);
       jPanelstatistik.setVisible(false);
       fyllVäljProjektComboBox();
       fyllVäljPartnerComboBox();
    }//GEN-LAST:event_jButtonPartnersActionPerformed

    private void jButtonHandläggareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHandläggareActionPerformed
        jPanelstart.setVisible(true);
       jPanelprojekt.setVisible(false);
       jPanelpartners.setVisible(false);
       jPanelhandläggare.setVisible(true);
       jPanelstatistik.setVisible(false);
       fyllComboBoxVäljProjektHand();
       fyllComboBoxVäljHandlaggare();
    }//GEN-LAST:event_jButtonHandläggareActionPerformed

    private void jButtonStatistikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStatistikActionPerformed
        jPanelstart.setVisible(true);
       jPanelprojekt.setVisible(false);
       jPanelpartners.setVisible(false);
       jPanelhandläggare.setVisible(false);
       jPanelstatistik.setVisible(true);
    }//GEN-LAST:event_jButtonStatistikActionPerformed

    private void jComboBoxProjektActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxProjektActionPerformed
       try{
           String valtProjekt = (String) jComboBoxProjekt.getSelectedItem();
           if(valtProjekt == null || valtProjekt.isEmpty()){
               return;
            }
          //hämta projektchef aid
           String aidSQL = "SELECT aid FROM anstalld WHERE epost = '" + inloggadAnvändare + "'";
            String mittAid = idb.fetchSingle(aidSQL);
            
            // hämta projektet via namn
            String pidSQL = "SELECT pid FROM projekt WHERE projektnamn = '" + valtProjekt + "' AND projektchef = '" + mittAid + "'";
            String pid = idb.fetchSingle(pidSQL);
            
            if(pid == null){
                JOptionPane.showMessageDialog(this, "kunde inte hitta projektet");
                return;
            }
            String sql = "SELECT * FROM projekt WHERE pid = '" + pid + "'";
            HashMap<String, String> projekt = idb.fetchRow(sql);
            if(projekt != null && !projekt.isEmpty()){
                jTextFieldPid.setText(projekt.get("pid"));
                jTextFieldProjektNamn.setText(projekt.get("projektnamn"));
                jTextFieldBeskrivning.setText(projekt.get("beskrivning"));
                jTextFieldstartdatum.setText(projekt.get("startdatum"));
                jTextFieldslutdatum.setText(projekt.get("slutdatum"));
                jTextFieldkostnad.setText(projekt.get("kostnad"));
                jTextFieldstatus.setText(projekt.get("status"));
                jTextFieldprioritet.setText(projekt.get("prioritet"));
                jTextFieldLand.setText(projekt.get("land"));
                
                
            }else{
                JOptionPane.showMessageDialog(this, "projektdata kunde inte hämtas");
            }
        }catch(InfException ex){
           JOptionPane.showMessageDialog(this, "något blev fel");
        }

        
    }//GEN-LAST:event_jComboBoxProjektActionPerformed

    private void jButtonSparaProjektActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSparaProjektActionPerformed
        try{
            String pid = jTextFieldPid.getText();
            String projektnamn = jTextFieldProjektNamn.getText();
            String beskrivning = jTextFieldBeskrivning.getText();
            String startdatum = jTextFieldstartdatum.getText();
            String slutdatum = jTextFieldslutdatum.getText();
            String kostnad = jTextFieldkostnad.getText();
            String status = jTextFieldstatus.getText();
            String prioritet = jTextFieldprioritet.getText();
            String land = jTextFieldLand.getText();
            
            String sqlUppdatering = "UPDATE projekt SET " +
                     "projektnamn = '" + projektnamn + "', " +
                     "beskrivning = '" + beskrivning + "', " +
                     "startdatum = '" + startdatum + "', " +
                     "slutdatum = '" + slutdatum + "', " +
                     "status = '" + status + "', " +
                     "prioritet = '" + prioritet + "', " +
                     "kostnad = '" + kostnad + "', " +
                     "land = '" + land + "' " +
                     "WHERE pid = '" + pid + "'";
            
            idb.update(sqlUppdatering);
            
            JOptionPane.showMessageDialog(this, "Projekt uppgifter har uppdaterats");
            
            }catch (InfException ex){
                JOptionPane.showMessageDialog(this, "Fel vi uppdatering" + ex.getMessage());
            }

    }//GEN-LAST:event_jButtonSparaProjektActionPerformed

    private void jComboBoxVäljProjektActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxVäljProjektActionPerformed
         String projektnamn = (String) jComboBoxVäljProjekt.getSelectedItem();
    if (projektnamn != null) {
        fyllPartnerLista(projektnamn);
    }
    
    }//GEN-LAST:event_jComboBoxVäljProjektActionPerformed

    private void jButtontabortpartnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtontabortpartnerActionPerformed
     try {
        String valdRad = jListPartners.getSelectedValue();
        String projektnamn = (String) jComboBoxVäljProjekt.getSelectedItem();
        if (valdRad == null || projektnamn == null) return;

        String partnerId = valdRad.split(" - ")[0].trim();
        String aid = idb.fetchSingle("SELECT aid FROM anstalld WHERE epost = '" + inloggadAnvändare + "'");
        String pid = idb.fetchSingle("SELECT pid FROM projekt WHERE projektnamn = '" + projektnamn + "' AND projektchef = '" + aid + "'");
                     
        String sql = "DELETE FROM projekt_partner WHERE pid = '" + pid + "' AND partner_pid = '" + partnerId + "'";
        idb.delete(sql);

        fyllPartnerLista(projektnamn);

    } catch (InfException ex) {
        JOptionPane.showMessageDialog(this, "Kunde inte ta bort partner: " + ex.getMessage());
    }
    }//GEN-LAST:event_jButtontabortpartnerActionPerformed

    private void jComboBoxVäljPartnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxVäljPartnerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxVäljPartnerActionPerformed

    private void jButtonläggtillPartnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonläggtillPartnerActionPerformed
        try {
        String partnerRad = (String) jComboBoxVäljPartner.getSelectedItem();
        String projektnamn = (String) jComboBoxVäljProjekt.getSelectedItem();
        if (partnerRad == null || projektnamn == null) return;

        String partnerId = partnerRad.split(" - ")[0].trim();
        String aid = idb.fetchSingle("SELECT aid FROM anstalld WHERE epost = '" + inloggadAnvändare + "'");
        String pid = idb.fetchSingle("SELECT pid FROM projekt WHERE projektnamn = '" + projektnamn + "' AND projektchef = '" + aid + "'");

        String sql = "INSERT INTO projekt_partner (pid, partner_pid) VALUES ('" + pid + "', '" + partnerId + "')";
        idb.insert(sql);

        fyllPartnerLista(projektnamn);

    } catch (InfException ex) {
        JOptionPane.showMessageDialog(this, "Kunde inte lägga till partner: " + ex.getMessage());
    }
    }//GEN-LAST:event_jButtonläggtillPartnerActionPerformed

    private void jButtonläggtillhandläggareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonläggtillhandläggareActionPerformed
       try {
        String projektnamn = (String) jComboBoxVäljProjektHand.getSelectedItem();
        String valdRad = (String) jComboBoxVäljHandläggare.getSelectedItem();
        if (projektnamn == null || valdRad == null) return;

        String aid = valdRad.split(" - ")[0].trim();

        String pid = idb.fetchSingle("SELECT pid FROM projekt WHERE projektnamn = '" + projektnamn + "'");

        String sql = "INSERT INTO ans_proj (aid, pid) VALUES ('" + aid + "', '" + pid + "')";
        idb.insert(sql);

        fyllListaMedHandlaggare(projektnamn);

    } catch (InfException e) {
        JOptionPane.showMessageDialog(this, "Kunde inte lägga till handläggare: " + e.getMessage());
    }
    }//GEN-LAST:event_jButtonläggtillhandläggareActionPerformed

    private void jButtontaborthandläggareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtontaborthandläggareActionPerformed
      try {
        String projektnamn = (String) jComboBoxVäljProjektHand.getSelectedItem();
        String valdRad = jListHandläggare.getSelectedValue();
        if (projektnamn == null || valdRad == null) return;

        String aid = valdRad.split(" - ")[0].trim();
        String pid = idb.fetchSingle("SELECT pid FROM projekt WHERE projektnamn = '" + projektnamn + "'");

        String sql = "DELETE FROM ans_proj WHERE aid = '" + aid + "' AND pid = '" + pid + "'";
        idb.delete(sql);

        fyllListaMedHandlaggare(projektnamn);

    } catch (InfException e) {
        JOptionPane.showMessageDialog(this, "Kunde inte ta bort handläggare: " + e.getMessage());
    }
    }//GEN-LAST:event_jButtontaborthandläggareActionPerformed

    private void jComboBoxVäljProjektHandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxVäljProjektHandActionPerformed
        
    String valtProjekt = (String) jComboBoxVäljProjektHand.getSelectedItem();
    if (valtProjekt != null && !valtProjekt.isEmpty()) {
        fyllListaMedHandlaggare(valtProjekt);
    }

    }//GEN-LAST:event_jComboBoxVäljProjektHandActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjektchefMeny.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjektchefMeny.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjektchefMeny.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjektchefMeny.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ProjektchefMeny().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonHandläggare;
    private javax.swing.JButton jButtonPartners;
    private javax.swing.JButton jButtonProjekt;
    private javax.swing.JButton jButtonSparaProjekt;
    private javax.swing.JButton jButtonStatistik;
    private javax.swing.JButton jButtonläggtillPartner;
    private javax.swing.JButton jButtonläggtillhandläggare;
    private javax.swing.JButton jButtontaborthandläggare;
    private javax.swing.JButton jButtontabortpartner;
    private javax.swing.JComboBox<String> jComboBoxProjekt;
    private javax.swing.JComboBox<String> jComboBoxVäljHandläggare;
    private javax.swing.JComboBox<String> jComboBoxVäljPartner;
    private javax.swing.JComboBox<String> jComboBoxVäljProjekt;
    private javax.swing.JComboBox<String> jComboBoxVäljProjektHand;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelAnvändare;
    private javax.swing.JList<String> jListHandläggare;
    private javax.swing.JList<String> jListPartners;
    private javax.swing.JPanel jPanelhandläggare;
    private javax.swing.JPanel jPanelpartners;
    private javax.swing.JPanel jPanelprojekt;
    private javax.swing.JPanel jPanelstart;
    private javax.swing.JPanel jPanelstatistik;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldBeskrivning;
    private javax.swing.JTextField jTextFieldLand;
    private javax.swing.JTextField jTextFieldPid;
    private javax.swing.JTextField jTextFieldProjektNamn;
    private javax.swing.JTextField jTextFieldkostnad;
    private javax.swing.JTextField jTextFieldprioritet;
    private javax.swing.JTextField jTextFieldslutdatum;
    private javax.swing.JTextField jTextFieldstartdatum;
    private javax.swing.JTextField jTextFieldstatus;
    // End of variables declaration//GEN-END:variables
}
